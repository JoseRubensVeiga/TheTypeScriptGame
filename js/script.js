!function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)r.d(n,o,function(t){return e[t]}.bind(null,o));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=0)}([function(e,t,r){"use strict";r.r(t);var n=function(){function e(){this.observers=[]}return e.prototype.addObserver=function(e){this.observers.push(e)},e.prototype.emit=function(e){this.observers.forEach((function(t){return t.notify(e)}))},e.prototype.getObservers=function(){return this.observers},e}(),o=function(){function e(){this.keyboardObservable=new n;var e=this.keyboardObservable;window.addEventListener("keydown",(function(t){e.emit(t.key)}))}return e.prototype.getObservable=function(){return this.keyboardObservable},e}(),i=function(){function e(e){this.notifyFn=e}return e.prototype.notify=function(e){this.notifyFn(e)},e}(),s=function(){function e(e,t,r){var n;this.keys=((n={})[r.up]={rows:-1},n[r.right]={columns:1},n[r.down]={rows:1},n[r.left]={columns:-1},n),this.player=document.createElement("div"),this.player.classList.add("player"),this.player.style.gridColumn=this.validateRow(t).toString(),this.player.style.gridRow=this.validateColumn(e).toString(),this.setPlayerObserver(),this.subscribeKeyboardListener()}return e.prototype.setPlayerObserver=function(){var e=this;this.observer=new i((function(t){var r=e.getKeys();r[t]&&e.move(r[t])}))},e.prototype.getPlayerObserver=function(){return this.observer},e.prototype.subscribeKeyboardListener=function(){(new o).getObservable().addObserver(this.getPlayerObserver())},e.prototype.validateColumn=function(e){return e<=0?1:e<=15?e:15},e.prototype.validateRow=function(e){return e<=0?1:e<=15?e:15},e.prototype.getElement=function(){return this.player},e.prototype.getKeys=function(){return this.keys},e.prototype.move=function(e){var t=parseInt(this.player.style.getPropertyValue("grid-row").split(" ")[0]),r=parseInt(this.player.style.getPropertyValue("grid-column").split(" ")[0]),n=t+(e.rows||0),o=r+(e.columns||0);this.player.style.gridRow=""+this.validateRow(n),this.player.style.gridColumn=""+this.validateColumn(o)},e}(),u=function(e){this.element=document.getElementById(e)},a=new(function(){function e(){var e=new u("app");this.app=e.element,this.createGame()}return e.prototype.createGame=function(){return this.app.classList.add("game-container"),this.app.style.gridTemplateRows="repeat(15, 1fr)",this.app.style.gridTemplateColumns="repeat(15, 1fr)",e},e.prototype.registerPlayer=function(e){e instanceof s&&(e=e.getElement()),this.app.appendChild(e)},e}()),l=new s(3,5,{up:"ArrowUp",right:"ArrowRight",down:"ArrowDown",left:"ArrowLeft"}),p=new s(2,6,{up:"w",right:"d",down:"s",left:"a"});a.registerPlayer(l),a.registerPlayer(p)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,